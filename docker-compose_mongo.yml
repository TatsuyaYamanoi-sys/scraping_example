# $ docker-compose -f docker-compose_mongo.yml up -d
version: '3.8'

services:
  backend:
    container_name: scraping_example_be
    build:
      context: ./backend/.
      dockerfile: ./dockerfile
    # restart: always
    volumes:
      - ./backend:/backend
      # - ~/.aws:/root/.aws
    expose:
      - "8100"
    ports:
      - 8100:8100
    env_file:
      - ./backend/.env.sandbox
    depends_on:
      - mongo
    networks:
      - backend-net

  mongo:
    image: mongo:5.0.3
    command: mongod --auth    # authが効いていないと, ユーザー認証しなくてもmongoで入れてしまうらしい.(この環境でははいれなかったが念のため.)
    container_name: scraping_example_db
    # restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo-user
      MONGO_INITDB_ROOT_PASSWORD: mongo-password
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    volumes:
      - db_volume:/data/db
      - db_config:/data/configdb
    networks:
      - backend-net
      - mongo-express
    ports:
      - 27017:27017
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 3m

  mongo_express:
    image: mongo-express
    container_name: scraping_example_mongo_express
    # restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo-user
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo-password
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo
    networks:
      - mongo-express
  
  frontend:
    stdin_open: true
    container_name: scraping_example_fe
    # restart: always
    build:
      context: ./frontend/.
      dockerfile: dockerfile
    volumes:
      - ./frontend:/frontend
    ports:
      - 3100:3000
    depends_on:
      - backend
    

volumes:
  db_volume:
  db_config:

networks:
  backend-net:
    name: backend-net
    driver: bridge
  mongo-express:
    driver: bridge
